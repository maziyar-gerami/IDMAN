plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'war'
}

dependencyManagement {
	imports {
		mavenBom 'org.apache.logging.log4j:log4j-bom:2.14.1'
	}
}

group = 'parsso'
version = 'idman'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
	maven {
		url "https://git.captcha.com/botdetect-java-captcha.git/blob_plain/HEAD:/"
	}
	jcenter()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-ldap'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.thymeleaf:thymeleaf-spring5'
	implementation 'org.springframework.security:spring-security-web'
	compile 'io.jsonwebtoken:jjwt-api:0.11.1'

	compile 'com.captcha:botdetect-jsp20:4.0.beta3.7'

	// https://mvnrepository.com/artifact/commons-io/commons-io
	compile group: 'commons-io', name: 'commons-io', version: '2.6'

	runtime 'io.jsonwebtoken:jjwt-impl:0.11.1',
			'io.jsonwebtoken:jjwt-jackson:0.11.1'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework.ldap:spring-ldap-core'
	implementation 'org.springframework.security:spring-security-ldap'
	implementation 'com.unboundid:unboundid-ldapsdk'
	implementation 'org.springframework.data:spring-data-redis'
	implementation 'redis.clients:jedis'
	compile 'com.googlecode.json-simple:json-simple:1.1.1'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
	compile group: 'org.springframework', name: 'spring-context-support', version: '5.2.6.RELEASE'

	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'

	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
	
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'

	// https://mvnrepository.com/artifact/com.google.zxing/core
	compile group: 'com.google.zxing', name: 'core', version: '3.4.0'

	// https://mvnrepository.com/artifact/com.google.zxing/javase
	compile group: 'com.google.zxing', name: 'javase', version: '3.4.0'

	compile group: 'com.sun.mail', name: 'javax.mail', version: '1.5.1'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-cas
	compile group: 'org.springframework.security', name: 'spring-security-cas', version: '5.3.3.RELEASE'

	// https://mvnrepository.com/artifact/org.apache.poi/poi
	compile group: 'org.apache.poi', name: 'poi', version: '4.1.2'
	implementation 'org.apache.poi:poi-ooxml:4.1.2'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: '2.3.4.RELEASE'

	// https://mvnrepository.com/artifact/com.github.ua-parser/uap-java
	compile group: 'com.github.ua-parser', name: 'uap-java', version: '1.4.0'

	// https://mvnrepository.com/artifact/org.springframework/spring-websocket
	compile group: 'org.springframework', name: 'spring-websocket', version: '4.0.0.RELEASE'

	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

	// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
	compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.4.0-b180830.0359'

	// https://mvnrepository.com/artifact/org.jboss.aerogear/aerogear-otp-java
	compile group: 'org.jboss.aerogear', name: 'aerogear-otp-java', version: '1.0.0'

	// https://mvnrepository.com/artifact/org.springframework/spring-websocket
	compile group: 'org.springframework', name: 'spring-websocket', version: '5.2.9.RELEASE'

	// https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
	implementation group: 'org.mongodb', name: 'mongo-java-driver', version: '3.12.8'

	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'

	// https://mvnrepository.com/artifact/org.mongodb/mongodb-driver-sync
	implementation group: 'org.mongodb', name: 'mongodb-driver-sync', version: '4.2.2'

	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'


	configurations.all {
		resolutionStrategy.dependencySubstitution.all { dependency ->
			if (dependency.requested instanceof ModuleComponentSelector && dependency.requested.module == 'spring-boot-starter-logging') {
				dependency.useTarget("org.springframework.boot:spring-boot-starter-log4j2:$dependency.requested.version", 'Use Log4j2 instead of Logback')
			}
		}
	}

}

test {
	useJUnitPlatform()
}
